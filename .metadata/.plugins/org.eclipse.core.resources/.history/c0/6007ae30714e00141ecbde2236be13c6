import java.math.BigInteger;
import java.text.DecimalFormat;
import java.util.Scanner;

public class SherlockAndSquare {

	public static void main(String[] args) {		
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		Double[] time=new Double[n];
		for (int i1 =  0; i1 < n; i1++){
			time[i1] = sc.nextDouble();
		}
		sherlock(time);
		sc.close();
	}

	private static void sherlock(Double[] a) {
		//int m = (int) (((Math.pow(10, 9))) + 7);
		DecimalFormat format = new DecimalFormat();
		format.setDecimalSeparatorAlwaysShown(false);
		Double len = (double) 1;
		BigInteger m=BigInteger.TEN.pow(9).add(new BigInteger("7"));
		BigInteger temp=BigInteger.ZERO;

		
		for (int i1 = 0; i1 <a.length; i1++) {
			temp=BigInteger.ZERO;
			if (a[i1] == 0) {
				//temp = (4) % m;
				System.out.println(format.format(4));
			} else {
			
				//	temp = 4 + len * ((Math.pow(2, a[i1] + 1)) % m - 2) % m;
				temp= temp.add(new BigInteger("4")).add(new BigInteger("2").pow( (int) (a[i1] + 1)).subtract(new BigInteger("2"))).mod(m);
				System.out.println(format.format(temp));
			}
		}
	}
}

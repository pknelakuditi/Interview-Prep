package algos.programmingTeam;

import java.util.ArrayList;
import java.util.Scanner;

public class MSTPrim {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		while (t > 0) {
			int p = sc.nextInt();
			int n = sc.nextInt();
			int m = sc.nextInt();
			ArrayList<ArrayList<Integer>> graph = new ArrayList<ArrayList<Integer>>();
			for (int i = 0; i <= v; i++) {
				graph.add(new ArrayList<Integer>());
			}
			for (int i = 0; i < e; i++) {
				int a = sc.nextInt();
				int b = sc.nextInt();
				graph.get(a).add(b);
				graph.get(b).add(a);
			}

			if (bFS(graph, v)) {
				System.out.println("yes");
			} else {
				System.out.println("no");
			}
			t--;
		}
	}

	public static int MST(ArrayList<ArrayList<Edge>> graph) {
		return 0;
	}

	public static class Edge {
		int weight;
		int oEdge;

		public Edge(int weight, int oEdge) {
			super();
			this.weight = weight;
			this.oEdge = oEdge;
		}
	}

}
